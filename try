#!/bin/env php
<?php

set_include_path(
    get_include_path()
    . PATH_SEPARATOR . './phplib' 
);

require_once 'Autoload.php';

function getRepoLocation($user) {
    $location = getenv('ETSY_SRC');
    if (!$location) {
        if (preg_match(";development/([^/]+);", getcwd(), $matches) > 0) {
            $location = "/home/$user/development/".$matches[1];
        } else {
            $location = "/home/$user/development/Etsyweb"; // Backwards compatibility
        }
    }
    return $location;
}

function getUser() {
    $user = getenv('LDAP_USER');  // LDAP_USER will override USER
    if (!$user) {
        $user = getenv("USER");
    }
    return $user;
}

function main() {
    $options = Util_OptionsParser::getOptions();

    $user = getUser();
    $location = getRepoLocation($user);

    $cmdRunner = new CommandRunner($options['verbose']);

    # Run checks
    $preChecks = array(
        new Precheck_BinaryFileSize($cmdRunner, $location),
        new Precheck_CopyAge($cmdRunner, $location)
    );

    foreach($preChecks as $c) {
        $c->check();
    }

    $repoManager = new RepoManager($location, $cmdRunner);

    # Generate diff if required
    $patch = $options['patch'];
    if (is_null($patch)) {
        $patch = $repoManager->generateDiff($options['staged-only']);
    }

    if ($options['dry-run']) {
        print "Not sending job to Jenkins (-n) diff is here: $patch\n";
        exit(0);
    }

    # Send to jenkins
    $jenkinsRunner = new JenkinsRunner(
        $cmdRunner,
        $repoManager->getRemotebranch("master"),
        $patch,
        $user
    );

    $callback = $options['callback'];

    $jenkinsRunner->startJenkinsJob($options['jobs']);

    if ($options['poll_for_completion'] || !is_null($callback)) {
        $jenkinsRunner->pollForCompletion($options['pretty']);
        $jenkinsRunner->executeCallback($callback);
    }
}
main();
